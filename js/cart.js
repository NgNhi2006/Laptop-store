document.addEventListener("DOMContentLoaded", () => {
  // ƒê·ª£i c√°i web load xong, kh√¥ng l·∫°i ƒë·ªï l·ªói cho dev

  const cartItemsContainer = document.getElementById("cart-items"); // c√°i m√°ng nh·ªët h√†ng
  const cartTotalElement = document.getElementById("cart-total"); // c√°i b·∫£ng n·ª£
  let cartItems = JSON.parse(localStorage.getItem("cartItems")) || [];
  // l·∫•y t·ª´ localStorage, c√≤n tr·ªëng th√¨ th√¥i ngh√®o c≈©ng ƒë·ª´ng mua

  const updateCartDisplay = () => {
    cartItemsContainer.innerHTML = ""; // reset, d·ªçn c·ª©t c≈© ƒëi
    let cartTotal = 0; // t·ªïng ti·ªÅn, chu·∫©n b·ªã r√∫t m√°u kh√°ch

    cartItems.forEach((item, index) => {
      const price =
        typeof item.price === "string"
          ? parseInt(item.price.replace(/[^\d]/g, "")) // l·ªçc ra s·ªë, ch·ª© ch·ªØ th√¨ ƒÉn ƒë∆∞·ª£c √†?
          : item.price;
      const itemTotal = price * item.quantity; // nh·∫©m to√°n l·ªõp 1
      cartTotal += itemTotal; // g√≥p g·∫°ch x√¢y bi·ªát th·ª± cho shop

      const row = document.createElement("tr");
      row.innerHTML = `
              <td><img src="${item.img || item.image || ""}" alt="${
        item.title
      }" class="cart-item-image" width="80"></td> <!-- ·∫¢nh cho ƒë·ª° x·∫•u -->
              <td>${item.title}</td> <!-- T√™n h√†ng, c√≥ g√¨ hot ƒë√¢u -->
              <td>${
                price ? price.toLocaleString("de-DE") : 0
              }‚Ç´</td> <!-- Gi√°, kh·ªèi m·∫∑c c·∫£ -->
              <td><input type="number" value="${
                item.quantity
              }" data-index="${index}" class="item-quantity" min="1"></td> <!-- ch·ªânh s·ªë l∆∞·ª£ng, ngh·ªãch ngu th√¨ t·ª± ch·ªãu -->
              <td>${
                itemTotal ? itemTotal.toLocaleString("de-DE") : 0
              }‚Ç´</td> <!-- ti·ªÅn nhi·ªÅu v√£i -->
              <td><button class="remove-item" data-index="${index}">X√≥a</button></td> <!-- l·ª° ngh√®o th√¨ b·∫•m -->
            `;
      cartItemsContainer.appendChild(row); // t·ªëng n√≥ v√†o b·∫£ng
    });

    cartTotalElement.innerText = cartTotal
      ? cartTotal.toLocaleString("de-DE")
      : 0; // t·ªïng ti·ªÅn, nh√¨n m√† kh√≥c üò≠
  };

  cartItemsContainer.addEventListener("change", (event) => {
    if (event.target.classList.contains("item-quantity")) {
      const index = event.target.dataset.index;
      cartItems[index].quantity = parseInt(event.target.value) || 1;
      // nh·∫≠p s·ªë b·∫≠y b·∫° tao auto s·ª≠a, kh·ªèi c√£i
      localStorage.setItem("cartItems", JSON.stringify(cartItems));
      updateCartDisplay(); // update l·∫°i cho ƒë·ª° l√≤i c√°i ngu
    }
  });

  cartItemsContainer.addEventListener("click", (event) => {
    if (event.target.classList.contains("remove-item")) {
      const index = event.target.dataset.index;
      cartItems.splice(index, 1); // bye m√≥n h√†ng, ch·∫Øc h·∫øt ti·ªÅn h·∫£ üòè
      localStorage.setItem("cartItems", JSON.stringify(cartItems));
      updateCartDisplay(); // v·∫Ω l·∫°i, gi·ªè tr·ªëng nh√¨n t·ªôi vl
    }
  });

  updateCartDisplay(); // ch·∫°y ph√°t ƒë·∫ßu cho kh√°ch bi·∫øt m√¨nh ngh√®o
});

function goToCheckout() {
  const cartItems = JSON.parse(localStorage.getItem("cartItems")) || [];
  if (cartItems.length === 0) {
    alert("Gi·ªè h√†ng tr·ªëng, ngh√®o th√¨ ƒëi ng·ªß ƒëi ü§°");
    // r·∫£nh rang b·∫•m checkout l√†m chi
    return;
  }
  localStorage.setItem("checkoutItems", JSON.stringify(cartItems));
  window.location.href = "../checkout.html"; // bay qua trang thanh to√°n, m√≥c v√≠ l·∫π
}
